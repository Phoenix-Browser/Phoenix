name: Deliver Release candidate

on:
  pull_request:
    types: [ opened, reopened ]
    branches:
      - master

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  BUILD_NUMBER: ${{ github.run_id }}
  IS_CI_BUILD: true
  IS_NIGHTLY: false

jobs:
  gradle_build:
    name: Gradle build!
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          cache: 'gradle'
      - name: Gradle build
        run: ./gradlew build --no-daemon

  gradle_check:
    name: Gradle Check
    runs-on: ubuntu-latest
    needs: [ gradle_build ]
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          cache: 'gradle'
      - name: Gradle app check
        run: ./gradlew check

  unit_tests:
    name: run unit tests
    runs-on: ubuntu-latest
    needs: [ gradle_build, gradle_check ]
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          cache: 'gradle'
      - name: Unit tests
        run: ./gradlew test

  android_tests:
    name: run android tests
    runs-on:  macos-latest
    needs: [ gradle_build, gradle_check ]
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          cache: 'gradle'
      - name: Instrumentation Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          script: ./gradlew connectedCheck

  deploy_release:
    name: Build release candidate apk based on latest tag push
    runs-on: ubuntu-latest
    needs: [ unit_tests, android_tests ]
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          cache: 'gradle'
      - name: decrypt signature
        run: |
          echo "${{ secrets.RELEASE_KEY }}" > SignatureKey.keystore.asc
          gpg -d --passphrase "${{ secrets.RELEASE_KEY_PASSPHRASE }}" --batch SignatureKey.keystore.asc > app/SignatureKey.jks
      - name: put additional info inside local.properties
        env:
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
          RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          RELEASE_KEY_ALIAS_PASSWORD: ${{ secrets.RELEASE_KEY_ALIAS_PASSWORD }}
        run: |
          echo keystore=\"SignatureKey.jks\" > ./local.properties
          echo storePassword=\"$RELEASE_KEY_PASSWORD\" > ./local.properties
          echo keyAlias=\"$RELEASE_KEY_ALIAS\" > ./local.properties
          echo keyPassword=\"$RELEASE_KEY_ALIAS_PASSWORD\" > ./local.properties
      - name: Build release APK
        run: ./gradlew assembleRelease
      - name: Check and print list of files inside build
        working-directory: app/build/outputs/apk/release/
        run: ls
      - name: Upload APK to workspace
        uses: actions/upload-artifact@v2
        with:
          name: rcAPK
          path: app/build/outputs/apk/release/app-release.apk
          if-no-files-found: error
  telegram_upload:
      name: Upload Stable apk in telegram
      runs-on: ubuntu-latest
      needs: [ deploy_release ]
      steps:
        - name: Download release APK
          uses: actions/download-artifact@v2
          with:
            name: rcAPK
        - name: Send beta build to telegram channel
          uses: appleboy/telegram-action@master
          with:
            to: ${{ secrets.CHANNEL_CHAT_ID }}
            token: ${{ secrets.BOT_TOKEN }}
            message: |
              #rc build based on pull request on master branch:
              run ID: ${{ github.run_id }}
              Triggered by: ${{ github.actor }}
              Ref: ${{ github.ref }}
              Commit SHA: ${{ github.sha }}
              latest commit description: ${{ github.event.head_commit.message }}
            document: app-release.apk
        - name: Send confirmation to group
          uses: appleboy/telegram-action@master
          with:
            to: ${{ secrets.GROUP_CHAT_ID }}
            token: ${{ secrets.BOT_TOKEN }}
            message: |
              Sucsses push run!
              additional info:
              run ID: ${{ github.run_id }}
              Triggered by: ${{ github.actor }}
              Ref: ${{ github.ref }}
              Commit SHA: ${{ github.sha }}
              latest commit description: ${{ github.event.head_commit.message }}
              Beta builds available at: @phoenixBrowserChannel